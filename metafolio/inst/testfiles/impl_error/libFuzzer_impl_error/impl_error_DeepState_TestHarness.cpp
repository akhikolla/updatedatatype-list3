// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// impl_error_DeepState_TestHarness_generation.cpp and impl_error_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector impl_error(NumericVector mu, double sigma_impl);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector mu  = RcppDeepState_NumericVector();
  std::string mu_t = "/home/akhila/fuzzer_packages/fuzzedpackages/metafolio/inst/testfiles/impl_error/libFuzzer_impl_error/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_mu.qs";
  qs::c_qsave(mu,mu_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "mu values: "<< mu << std::endl;
  NumericVector sigma_impl(1);
  sigma_impl[0]  = RcppDeepState_double();
  std::string sigma_impl_t = "/home/akhila/fuzzer_packages/fuzzedpackages/metafolio/inst/testfiles/impl_error/libFuzzer_impl_error/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_sigma_impl.qs";
  qs::c_qsave(sigma_impl,sigma_impl_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "sigma_impl values: "<< sigma_impl << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    impl_error(mu,sigma_impl[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
