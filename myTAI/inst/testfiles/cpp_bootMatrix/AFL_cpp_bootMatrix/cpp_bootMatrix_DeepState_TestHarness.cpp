// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// cpp_bootMatrix_DeepState_TestHarness_generation.cpp and cpp_bootMatrix_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix cpp_bootMatrix(const NumericMatrix& ExpressionMatrix, const NumericVector& AgeVector, const int& permutations);

TEST(,){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix ExpressionMatrix  = RcppDeepState_NumericMatrix();
  std::string ExpressionMatrix_t = "/home/akhila/fuzzer_packages/fuzzedpackages/myTAI/inst/testfiles/cpp_bootMatrix/AFL_cpp_bootMatrix/afl_inputs/" + std::to_string(t) + "_ExpressionMatrix.qs";
  qs::c_qsave(ExpressionMatrix,ExpressionMatrix_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ExpressionMatrix values: "<< ExpressionMatrix << std::endl;
  NumericVector AgeVector  = RcppDeepState_NumericVector();
  std::string AgeVector_t = "/home/akhila/fuzzer_packages/fuzzedpackages/myTAI/inst/testfiles/cpp_bootMatrix/AFL_cpp_bootMatrix/afl_inputs/" + std::to_string(t) + "_AgeVector.qs";
  qs::c_qsave(AgeVector,AgeVector_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "AgeVector values: "<< AgeVector << std::endl;
  IntegerVector permutations(1);
  permutations[0]  = RcppDeepState_int();
  std::string permutations_t = "/home/akhila/fuzzer_packages/fuzzedpackages/myTAI/inst/testfiles/cpp_bootMatrix/AFL_cpp_bootMatrix/afl_inputs/" + std::to_string(t) + "_permutations.qs";
  qs::c_qsave(permutations,permutations_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "permutations values: "<< permutations << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    cpp_bootMatrix(ExpressionMatrix,AgeVector,permutations[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
