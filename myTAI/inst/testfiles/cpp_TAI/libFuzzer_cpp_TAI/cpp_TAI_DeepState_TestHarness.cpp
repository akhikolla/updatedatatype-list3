// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// cpp_TAI_DeepState_TestHarness_generation.cpp and cpp_TAI_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector cpp_TAI(const NumericMatrix& ExpressionSet, const NumericVector& Phylostratum);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix ExpressionSet  = RcppDeepState_NumericMatrix();
  std::string ExpressionSet_t = "/home/akhila/fuzzer_packages/fuzzedpackages/myTAI/inst/testfiles/cpp_TAI/libFuzzer_cpp_TAI/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_ExpressionSet.qs";
  qs::c_qsave(ExpressionSet,ExpressionSet_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ExpressionSet values: "<< ExpressionSet << std::endl;
  NumericVector Phylostratum  = RcppDeepState_NumericVector();
  std::string Phylostratum_t = "/home/akhila/fuzzer_packages/fuzzedpackages/myTAI/inst/testfiles/cpp_TAI/libFuzzer_cpp_TAI/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_Phylostratum.qs";
  qs::c_qsave(Phylostratum,Phylostratum_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Phylostratum values: "<< Phylostratum << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    cpp_TAI(ExpressionSet,Phylostratum);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
