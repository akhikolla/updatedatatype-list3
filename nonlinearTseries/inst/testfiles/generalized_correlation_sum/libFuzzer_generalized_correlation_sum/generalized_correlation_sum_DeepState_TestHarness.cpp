// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// generalized_correlation_sum_DeepState_TestHarness_generation.cpp and generalized_correlation_sum_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix generalized_correlation_sum(const NumericVector& timeSeries, int timeLag, int theilerWindow, NumericVector& radii, int minEmbeddingDim, int maxEmbeddingDim, int corrSumOrder, int numberBoxes);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector timeSeries  = RcppDeepState_NumericVector();
  std::string timeSeries_t = "/home/akhila/fuzzer_packages/fuzzedpackages/nonlinearTseries/inst/testfiles/generalized_correlation_sum/libFuzzer_generalized_correlation_sum/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_timeSeries.qs";
  qs::c_qsave(timeSeries,timeSeries_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "timeSeries values: "<< timeSeries << std::endl;
  IntegerVector timeLag(1);
  timeLag[0]  = RcppDeepState_int();
  std::string timeLag_t = "/home/akhila/fuzzer_packages/fuzzedpackages/nonlinearTseries/inst/testfiles/generalized_correlation_sum/libFuzzer_generalized_correlation_sum/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_timeLag.qs";
  qs::c_qsave(timeLag,timeLag_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "timeLag values: "<< timeLag << std::endl;
  IntegerVector theilerWindow(1);
  theilerWindow[0]  = RcppDeepState_int();
  std::string theilerWindow_t = "/home/akhila/fuzzer_packages/fuzzedpackages/nonlinearTseries/inst/testfiles/generalized_correlation_sum/libFuzzer_generalized_correlation_sum/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_theilerWindow.qs";
  qs::c_qsave(theilerWindow,theilerWindow_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "theilerWindow values: "<< theilerWindow << std::endl;
  NumericVector radii  = RcppDeepState_NumericVector();
  std::string radii_t = "/home/akhila/fuzzer_packages/fuzzedpackages/nonlinearTseries/inst/testfiles/generalized_correlation_sum/libFuzzer_generalized_correlation_sum/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_radii.qs";
  qs::c_qsave(radii,radii_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "radii values: "<< radii << std::endl;
  IntegerVector minEmbeddingDim(1);
  minEmbeddingDim[0]  = RcppDeepState_int();
  std::string minEmbeddingDim_t = "/home/akhila/fuzzer_packages/fuzzedpackages/nonlinearTseries/inst/testfiles/generalized_correlation_sum/libFuzzer_generalized_correlation_sum/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_minEmbeddingDim.qs";
  qs::c_qsave(minEmbeddingDim,minEmbeddingDim_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "minEmbeddingDim values: "<< minEmbeddingDim << std::endl;
  IntegerVector maxEmbeddingDim(1);
  maxEmbeddingDim[0]  = RcppDeepState_int();
  std::string maxEmbeddingDim_t = "/home/akhila/fuzzer_packages/fuzzedpackages/nonlinearTseries/inst/testfiles/generalized_correlation_sum/libFuzzer_generalized_correlation_sum/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_maxEmbeddingDim.qs";
  qs::c_qsave(maxEmbeddingDim,maxEmbeddingDim_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "maxEmbeddingDim values: "<< maxEmbeddingDim << std::endl;
  IntegerVector corrSumOrder(1);
  corrSumOrder[0]  = RcppDeepState_int();
  std::string corrSumOrder_t = "/home/akhila/fuzzer_packages/fuzzedpackages/nonlinearTseries/inst/testfiles/generalized_correlation_sum/libFuzzer_generalized_correlation_sum/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_corrSumOrder.qs";
  qs::c_qsave(corrSumOrder,corrSumOrder_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "corrSumOrder values: "<< corrSumOrder << std::endl;
  IntegerVector numberBoxes(1);
  numberBoxes[0]  = RcppDeepState_int();
  std::string numberBoxes_t = "/home/akhila/fuzzer_packages/fuzzedpackages/nonlinearTseries/inst/testfiles/generalized_correlation_sum/libFuzzer_generalized_correlation_sum/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_numberBoxes.qs";
  qs::c_qsave(numberBoxes,numberBoxes_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "numberBoxes values: "<< numberBoxes << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    generalized_correlation_sum(timeSeries,timeLag[0],theilerWindow[0],radii,minEmbeddingDim[0],maxEmbeddingDim[0],corrSumOrder[0],numberBoxes[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
