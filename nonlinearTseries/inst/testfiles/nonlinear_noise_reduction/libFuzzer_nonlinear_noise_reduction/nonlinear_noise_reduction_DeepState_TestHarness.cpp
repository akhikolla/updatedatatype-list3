// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// nonlinear_noise_reduction_DeepState_TestHarness_generation.cpp and nonlinear_noise_reduction_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector nonlinear_noise_reduction(const NumericVector& timeSeries, int embeddingDimension, double radius, int nBoxes);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector timeSeries  = RcppDeepState_NumericVector();
  std::string timeSeries_t = "/home/akhila/fuzzer_packages/fuzzedpackages/nonlinearTseries/inst/testfiles/nonlinear_noise_reduction/libFuzzer_nonlinear_noise_reduction/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_timeSeries.qs";
  qs::c_qsave(timeSeries,timeSeries_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "timeSeries values: "<< timeSeries << std::endl;
  IntegerVector embeddingDimension(1);
  embeddingDimension[0]  = RcppDeepState_int();
  std::string embeddingDimension_t = "/home/akhila/fuzzer_packages/fuzzedpackages/nonlinearTseries/inst/testfiles/nonlinear_noise_reduction/libFuzzer_nonlinear_noise_reduction/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_embeddingDimension.qs";
  qs::c_qsave(embeddingDimension,embeddingDimension_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "embeddingDimension values: "<< embeddingDimension << std::endl;
  NumericVector radius(1);
  radius[0]  = RcppDeepState_double();
  std::string radius_t = "/home/akhila/fuzzer_packages/fuzzedpackages/nonlinearTseries/inst/testfiles/nonlinear_noise_reduction/libFuzzer_nonlinear_noise_reduction/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_radius.qs";
  qs::c_qsave(radius,radius_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "radius values: "<< radius << std::endl;
  IntegerVector nBoxes(1);
  nBoxes[0]  = RcppDeepState_int();
  std::string nBoxes_t = "/home/akhila/fuzzer_packages/fuzzedpackages/nonlinearTseries/inst/testfiles/nonlinear_noise_reduction/libFuzzer_nonlinear_noise_reduction/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_nBoxes.qs";
  qs::c_qsave(nBoxes,nBoxes_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nBoxes values: "<< nBoxes << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    nonlinear_noise_reduction(timeSeries,embeddingDimension[0],radius[0],nBoxes[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
