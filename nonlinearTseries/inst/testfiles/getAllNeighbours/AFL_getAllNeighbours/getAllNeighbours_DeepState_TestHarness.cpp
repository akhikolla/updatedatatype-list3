// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// getAllNeighbours_DeepState_TestHarness_generation.cpp and getAllNeighbours_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List getAllNeighbours(const NumericMatrix& phaseSpace, double radius, int numberBoxes);

TEST(,){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix phaseSpace  = RcppDeepState_NumericMatrix();
  std::string phaseSpace_t = "/home/akhila/fuzzer_packages/fuzzedpackages/nonlinearTseries/inst/testfiles/getAllNeighbours/AFL_getAllNeighbours/afl_inputs/" + std::to_string(t) + "_phaseSpace.qs";
  qs::c_qsave(phaseSpace,phaseSpace_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "phaseSpace values: "<< phaseSpace << std::endl;
  NumericVector radius(1);
  radius[0]  = RcppDeepState_double();
  std::string radius_t = "/home/akhila/fuzzer_packages/fuzzedpackages/nonlinearTseries/inst/testfiles/getAllNeighbours/AFL_getAllNeighbours/afl_inputs/" + std::to_string(t) + "_radius.qs";
  qs::c_qsave(radius,radius_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "radius values: "<< radius << std::endl;
  IntegerVector numberBoxes(1);
  numberBoxes[0]  = RcppDeepState_int();
  std::string numberBoxes_t = "/home/akhila/fuzzer_packages/fuzzedpackages/nonlinearTseries/inst/testfiles/getAllNeighbours/AFL_getAllNeighbours/afl_inputs/" + std::to_string(t) + "_numberBoxes.qs";
  qs::c_qsave(numberBoxes,numberBoxes_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "numberBoxes values: "<< numberBoxes << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    getAllNeighbours(phaseSpace,radius[0],numberBoxes[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
