// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// getVectorNeighbours_DeepState_TestHarness_generation.cpp and getVectorNeighbours_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerVector getVectorNeighbours(const NumericMatrix& phaseSpace, int vectorIndex, double radius, int numberBoxes);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericMatrix phaseSpace  = RcppDeepState_NumericMatrix();
  std::string phaseSpace_t = "/home/akhila/fuzzer_packages/fuzzedpackages/nonlinearTseries/inst/testfiles/getVectorNeighbours/libFuzzer_getVectorNeighbours/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_phaseSpace.qs";
  qs::c_qsave(phaseSpace,phaseSpace_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "phaseSpace values: "<< phaseSpace << std::endl;
  IntegerVector vectorIndex(1);
  vectorIndex[0]  = RcppDeepState_int();
  std::string vectorIndex_t = "/home/akhila/fuzzer_packages/fuzzedpackages/nonlinearTseries/inst/testfiles/getVectorNeighbours/libFuzzer_getVectorNeighbours/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_vectorIndex.qs";
  qs::c_qsave(vectorIndex,vectorIndex_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "vectorIndex values: "<< vectorIndex << std::endl;
  NumericVector radius(1);
  radius[0]  = RcppDeepState_double();
  std::string radius_t = "/home/akhila/fuzzer_packages/fuzzedpackages/nonlinearTseries/inst/testfiles/getVectorNeighbours/libFuzzer_getVectorNeighbours/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_radius.qs";
  qs::c_qsave(radius,radius_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "radius values: "<< radius << std::endl;
  IntegerVector numberBoxes(1);
  numberBoxes[0]  = RcppDeepState_int();
  std::string numberBoxes_t = "/home/akhila/fuzzer_packages/fuzzedpackages/nonlinearTseries/inst/testfiles/getVectorNeighbours/libFuzzer_getVectorNeighbours/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_numberBoxes.qs";
  qs::c_qsave(numberBoxes,numberBoxes_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "numberBoxes values: "<< numberBoxes << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    getVectorNeighbours(phaseSpace,vectorIndex[0],radius[0],numberBoxes[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
