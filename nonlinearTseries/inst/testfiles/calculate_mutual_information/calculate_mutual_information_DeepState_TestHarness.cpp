// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// calculate_mutual_information_DeepState_TestHarness_generation.cpp and calculate_mutual_information_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector calculate_mutual_information(const NumericVector& tseries, const int& maxlag, const int& nPartitions);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector tseries  = RcppDeepState_NumericVector();
  qs::c_qsave(tseries,"/home/akhila/fuzzer_packages/fuzzedpackages/nonlinearTseries/inst/testfiles/calculate_mutual_information/inputs/tseries.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tseries values: "<< tseries << std::endl;
  IntegerVector maxlag(1);
  maxlag[0]  = RcppDeepState_int();
  qs::c_qsave(maxlag,"/home/akhila/fuzzer_packages/fuzzedpackages/nonlinearTseries/inst/testfiles/calculate_mutual_information/inputs/maxlag.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "maxlag values: "<< maxlag << std::endl;
  IntegerVector nPartitions(1);
  nPartitions[0]  = RcppDeepState_int();
  qs::c_qsave(nPartitions,"/home/akhila/fuzzer_packages/fuzzedpackages/nonlinearTseries/inst/testfiles/calculate_mutual_information/inputs/nPartitions.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nPartitions values: "<< nPartitions << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    calculate_mutual_information(tseries,maxlag[0],nPartitions[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
