// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// calculate_time_series_histogram_DeepState_TestHarness_generation.cpp and calculate_time_series_histogram_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix calculate_time_series_histogram(const NumericVector& x, const int& timeLag, const int& nPartitions);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  NumericVector x  = RcppDeepState_NumericVector();
  qs::c_qsave(x,"/home/akhila/fuzzer_packages/fuzzedpackages/nonlinearTseries/inst/testfiles/calculate_time_series_histogram/inputs/x.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  IntegerVector timeLag(1);
  timeLag[0]  = RcppDeepState_int();
  qs::c_qsave(timeLag,"/home/akhila/fuzzer_packages/fuzzedpackages/nonlinearTseries/inst/testfiles/calculate_time_series_histogram/inputs/timeLag.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "timeLag values: "<< timeLag << std::endl;
  IntegerVector nPartitions(1);
  nPartitions[0]  = RcppDeepState_int();
  qs::c_qsave(nPartitions,"/home/akhila/fuzzer_packages/fuzzedpackages/nonlinearTseries/inst/testfiles/calculate_time_series_histogram/inputs/nPartitions.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "nPartitions values: "<< nPartitions << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    calculate_time_series_histogram(x,timeLag[0],nPartitions[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
