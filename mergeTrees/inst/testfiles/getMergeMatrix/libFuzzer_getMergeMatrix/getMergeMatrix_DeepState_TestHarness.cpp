// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// getMergeMatrix_DeepState_TestHarness_generation.cpp and getMergeMatrix_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::List getMergeMatrix(IntegerVector group, IntegerVector parent, IntegerVector order);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector group  = RcppDeepState_IntegerVector();
  std::string group_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mergeTrees/inst/testfiles/getMergeMatrix/libFuzzer_getMergeMatrix/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_group.qs";
  qs::c_qsave(group,group_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "group values: "<< group << std::endl;
  IntegerVector parent  = RcppDeepState_IntegerVector();
  std::string parent_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mergeTrees/inst/testfiles/getMergeMatrix/libFuzzer_getMergeMatrix/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_parent.qs";
  qs::c_qsave(parent,parent_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "parent values: "<< parent << std::endl;
  IntegerVector order  = RcppDeepState_IntegerVector();
  std::string order_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mergeTrees/inst/testfiles/getMergeMatrix/libFuzzer_getMergeMatrix/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_order.qs";
  qs::c_qsave(order,order_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "order values: "<< order << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    getMergeMatrix(group,parent,order);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
