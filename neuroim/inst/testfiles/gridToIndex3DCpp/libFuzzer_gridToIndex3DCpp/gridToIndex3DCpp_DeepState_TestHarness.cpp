// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// gridToIndex3DCpp_DeepState_TestHarness_generation.cpp and gridToIndex3DCpp_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

IntegerVector gridToIndex3DCpp(IntegerVector array_dim, NumericMatrix voxmat);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector array_dim  = RcppDeepState_IntegerVector();
  std::string array_dim_t = "/home/akhila/fuzzer_packages/fuzzedpackages/neuroim/inst/testfiles/gridToIndex3DCpp/libFuzzer_gridToIndex3DCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_array_dim.qs";
  qs::c_qsave(array_dim,array_dim_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "array_dim values: "<< array_dim << std::endl;
  NumericMatrix voxmat  = RcppDeepState_NumericMatrix();
  std::string voxmat_t = "/home/akhila/fuzzer_packages/fuzzedpackages/neuroim/inst/testfiles/gridToIndex3DCpp/libFuzzer_gridToIndex3DCpp/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_voxmat.qs";
  qs::c_qsave(voxmat,voxmat_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "voxmat values: "<< voxmat << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    gridToIndex3DCpp(array_dim,voxmat);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
