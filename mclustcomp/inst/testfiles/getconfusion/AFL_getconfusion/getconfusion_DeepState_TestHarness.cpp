// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// getconfusion_DeepState_TestHarness_generation.cpp and getconfusion_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix getconfusion(NumericVector x, NumericVector y, NumericVector ux, NumericVector uy);

TEST(,){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector x  = RcppDeepState_NumericVector();
  std::string x_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mclustcomp/inst/testfiles/getconfusion/AFL_getconfusion/afl_inputs/" + std::to_string(t) + "_x.qs";
  qs::c_qsave(x,x_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  NumericVector y  = RcppDeepState_NumericVector();
  std::string y_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mclustcomp/inst/testfiles/getconfusion/AFL_getconfusion/afl_inputs/" + std::to_string(t) + "_y.qs";
  qs::c_qsave(y,y_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "y values: "<< y << std::endl;
  NumericVector ux  = RcppDeepState_NumericVector();
  std::string ux_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mclustcomp/inst/testfiles/getconfusion/AFL_getconfusion/afl_inputs/" + std::to_string(t) + "_ux.qs";
  qs::c_qsave(ux,ux_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "ux values: "<< ux << std::endl;
  NumericVector uy  = RcppDeepState_NumericVector();
  std::string uy_t = "/home/akhila/fuzzer_packages/fuzzedpackages/mclustcomp/inst/testfiles/getconfusion/AFL_getconfusion/afl_inputs/" + std::to_string(t) + "_uy.qs";
  qs::c_qsave(uy,uy_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "uy values: "<< uy << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    getconfusion(x,y,ux,uy);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
