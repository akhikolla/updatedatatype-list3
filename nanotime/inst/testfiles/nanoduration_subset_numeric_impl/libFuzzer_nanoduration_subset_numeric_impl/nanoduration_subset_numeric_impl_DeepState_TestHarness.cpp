// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// nanoduration_subset_numeric_impl_DeepState_TestHarness_generation.cpp and nanoduration_subset_numeric_impl_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::NumericVector nanoduration_subset_numeric_impl(const Rcpp::NumericVector& v, const Rcpp::NumericVector& idx);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector v  = RcppDeepState_NumericVector();
  std::string v_t = "/home/akhila/fuzzer_packages/fuzzedpackages/nanotime/inst/testfiles/nanoduration_subset_numeric_impl/libFuzzer_nanoduration_subset_numeric_impl/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_v.qs";
  qs::c_qsave(v,v_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "v values: "<< v << std::endl;
  NumericVector idx  = RcppDeepState_NumericVector();
  std::string idx_t = "/home/akhila/fuzzer_packages/fuzzedpackages/nanotime/inst/testfiles/nanoduration_subset_numeric_impl/libFuzzer_nanoduration_subset_numeric_impl/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_idx.qs";
  qs::c_qsave(idx,idx_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "idx values: "<< idx << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    nanoduration_subset_numeric_impl(v,idx);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
