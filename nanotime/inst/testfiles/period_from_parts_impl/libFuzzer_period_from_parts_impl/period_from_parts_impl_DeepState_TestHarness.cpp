// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// period_from_parts_impl_DeepState_TestHarness_generation.cpp and period_from_parts_impl_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

Rcpp::ComplexVector period_from_parts_impl(Rcpp::IntegerVector months_v, Rcpp::IntegerVector days_v, Rcpp::NumericVector dur_v);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  IntegerVector months_v  = RcppDeepState_IntegerVector();
  std::string months_v_t = "/home/akhila/fuzzer_packages/fuzzedpackages/nanotime/inst/testfiles/period_from_parts_impl/libFuzzer_period_from_parts_impl/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_months_v.qs";
  qs::c_qsave(months_v,months_v_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "months_v values: "<< months_v << std::endl;
  IntegerVector days_v  = RcppDeepState_IntegerVector();
  std::string days_v_t = "/home/akhila/fuzzer_packages/fuzzedpackages/nanotime/inst/testfiles/period_from_parts_impl/libFuzzer_period_from_parts_impl/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_days_v.qs";
  qs::c_qsave(days_v,days_v_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "days_v values: "<< days_v << std::endl;
  NumericVector dur_v  = RcppDeepState_NumericVector();
  std::string dur_v_t = "/home/akhila/fuzzer_packages/fuzzedpackages/nanotime/inst/testfiles/period_from_parts_impl/libFuzzer_period_from_parts_impl/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_dur_v.qs";
  qs::c_qsave(dur_v,dur_v_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "dur_v values: "<< dur_v << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    period_from_parts_impl(months_v,days_v,dur_v);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
