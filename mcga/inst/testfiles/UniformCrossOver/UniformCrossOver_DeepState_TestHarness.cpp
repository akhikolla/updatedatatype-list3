// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// UniformCrossOver_DeepState_TestHarness_generation.cpp and UniformCrossOver_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List UniformCrossOver(IntegerVector bytes1, IntegerVector bytes2);

TEST(,){
  RInside R;
  std::cout << "input starts" << std::endl;
  IntegerVector bytes1  = RcppDeepState_IntegerVector();
  qs::c_qsave(bytes1,"/home/akhila/fuzzer_packages/fuzzedpackages/mcga/inst/testfiles/UniformCrossOver/inputs/bytes1.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "bytes1 values: "<< bytes1 << std::endl;
  IntegerVector bytes2  = RcppDeepState_IntegerVector();
  qs::c_qsave(bytes2,"/home/akhila/fuzzer_packages/fuzzedpackages/mcga/inst/testfiles/UniformCrossOver/inputs/bytes2.qs",
		"high", "zstd", 1, 15, true, 1);
  std::cout << "bytes2 values: "<< bytes2 << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    UniformCrossOver(bytes1,bytes2);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
