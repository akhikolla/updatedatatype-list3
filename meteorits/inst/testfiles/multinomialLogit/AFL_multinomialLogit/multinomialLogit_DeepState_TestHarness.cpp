// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// multinomialLogit_DeepState_TestHarness_generation.cpp and multinomialLogit_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

List multinomialLogit(arma::mat& W, arma::mat& X, arma::mat& Y, arma::mat& Gamma);

TEST(,){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  std::ofstream W_stream;
  arma::mat W  = RcppDeepState_mat();
  W_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/meteorits/inst/testfiles/multinomialLogit/inputs/W");
  W_stream << W;
  std::cout << "W values: "<< W << std::endl;
  W_stream.close();
  std::ofstream X_stream;
  arma::mat X  = RcppDeepState_mat();
  X_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/meteorits/inst/testfiles/multinomialLogit/inputs/X");
  X_stream << X;
  std::cout << "X values: "<< X << std::endl;
  X_stream.close();
  std::ofstream Y_stream;
  arma::mat Y  = RcppDeepState_mat();
  Y_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/meteorits/inst/testfiles/multinomialLogit/inputs/Y");
  Y_stream << Y;
  std::cout << "Y values: "<< Y << std::endl;
  Y_stream.close();
  std::ofstream Gamma_stream;
  arma::mat Gamma  = RcppDeepState_mat();
  Gamma_stream.open("/home/akhila/fuzzer_packages/fuzzedpackages/meteorits/inst/testfiles/multinomialLogit/inputs/Gamma");
  Gamma_stream << Gamma;
  std::cout << "Gamma values: "<< Gamma << std::endl;
  Gamma_stream.close();
  std::cout << "input ends" << std::endl;
  try{
    multinomialLogit(W,X,Y,Gamma);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
