// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// hourlyFromDailyRH_DeepState_TestHarness_generation.cpp and hourlyFromDailyRH_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericMatrix hourlyFromDailyRH(NumericVector relh, NumericVector tmin, NumericVector tmax, NumericVector doy, NumericVector latitude);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector relh  = RcppDeepState_NumericVector();
  std::string relh_t = "/home/akhila/fuzzer_packages/fuzzedpackages/meteor/inst/testfiles/hourlyFromDailyRH/libFuzzer_hourlyFromDailyRH/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_relh.qs";
  qs::c_qsave(relh,relh_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "relh values: "<< relh << std::endl;
  NumericVector tmin  = RcppDeepState_NumericVector();
  std::string tmin_t = "/home/akhila/fuzzer_packages/fuzzedpackages/meteor/inst/testfiles/hourlyFromDailyRH/libFuzzer_hourlyFromDailyRH/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_tmin.qs";
  qs::c_qsave(tmin,tmin_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tmin values: "<< tmin << std::endl;
  NumericVector tmax  = RcppDeepState_NumericVector();
  std::string tmax_t = "/home/akhila/fuzzer_packages/fuzzedpackages/meteor/inst/testfiles/hourlyFromDailyRH/libFuzzer_hourlyFromDailyRH/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_tmax.qs";
  qs::c_qsave(tmax,tmax_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tmax values: "<< tmax << std::endl;
  NumericVector doy  = RcppDeepState_NumericVector();
  std::string doy_t = "/home/akhila/fuzzer_packages/fuzzedpackages/meteor/inst/testfiles/hourlyFromDailyRH/libFuzzer_hourlyFromDailyRH/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_doy.qs";
  qs::c_qsave(doy,doy_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "doy values: "<< doy << std::endl;
  NumericVector latitude  = RcppDeepState_NumericVector();
  std::string latitude_t = "/home/akhila/fuzzer_packages/fuzzedpackages/meteor/inst/testfiles/hourlyFromDailyRH/libFuzzer_hourlyFromDailyRH/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_latitude.qs";
  qs::c_qsave(latitude,latitude_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "latitude values: "<< latitude << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    hourlyFromDailyRH(relh,tmin,tmax,doy,latitude);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
