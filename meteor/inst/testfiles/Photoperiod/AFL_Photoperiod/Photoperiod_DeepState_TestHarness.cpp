// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// Photoperiod_DeepState_TestHarness_generation.cpp and Photoperiod_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector Photoperiod(NumericVector doy, NumericVector latitude);

TEST(,){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector doy  = RcppDeepState_NumericVector();
  std::string doy_t = "/home/akhila/fuzzer_packages/fuzzedpackages/meteor/inst/testfiles/Photoperiod/AFL_Photoperiod/afl_inputs/" + std::to_string(t) + "_doy.qs";
  qs::c_qsave(doy,doy_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "doy values: "<< doy << std::endl;
  NumericVector latitude  = RcppDeepState_NumericVector();
  std::string latitude_t = "/home/akhila/fuzzer_packages/fuzzedpackages/meteor/inst/testfiles/Photoperiod/AFL_Photoperiod/afl_inputs/" + std::to_string(t) + "_latitude.qs";
  qs::c_qsave(latitude,latitude_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "latitude values: "<< latitude << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    Photoperiod(doy,latitude);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
