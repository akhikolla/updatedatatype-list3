// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// E_Penman_DeepState_TestHarness_generation.cpp and E_Penman_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <ctime>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector E_Penman(NumericVector temp, NumericVector relh, NumericVector atmp, NumericVector Rs, NumericVector Rext, NumericVector u, NumericVector alpha, NumericVector Z);

TEST(,){
  RInside R;
  std::time_t t = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector temp  = RcppDeepState_NumericVector();
  std::string temp_t = "/home/akhila/fuzzer_packages/fuzzedpackages/meteor/inst/testfiles/E_Penman/AFL_E_Penman/afl_inputs/" + std::to_string(t) + "_temp.qs";
  qs::c_qsave(temp,temp_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "temp values: "<< temp << std::endl;
  NumericVector relh  = RcppDeepState_NumericVector();
  std::string relh_t = "/home/akhila/fuzzer_packages/fuzzedpackages/meteor/inst/testfiles/E_Penman/AFL_E_Penman/afl_inputs/" + std::to_string(t) + "_relh.qs";
  qs::c_qsave(relh,relh_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "relh values: "<< relh << std::endl;
  NumericVector atmp  = RcppDeepState_NumericVector();
  std::string atmp_t = "/home/akhila/fuzzer_packages/fuzzedpackages/meteor/inst/testfiles/E_Penman/AFL_E_Penman/afl_inputs/" + std::to_string(t) + "_atmp.qs";
  qs::c_qsave(atmp,atmp_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "atmp values: "<< atmp << std::endl;
  NumericVector Rs  = RcppDeepState_NumericVector();
  std::string Rs_t = "/home/akhila/fuzzer_packages/fuzzedpackages/meteor/inst/testfiles/E_Penman/AFL_E_Penman/afl_inputs/" + std::to_string(t) + "_Rs.qs";
  qs::c_qsave(Rs,Rs_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Rs values: "<< Rs << std::endl;
  NumericVector Rext  = RcppDeepState_NumericVector();
  std::string Rext_t = "/home/akhila/fuzzer_packages/fuzzedpackages/meteor/inst/testfiles/E_Penman/AFL_E_Penman/afl_inputs/" + std::to_string(t) + "_Rext.qs";
  qs::c_qsave(Rext,Rext_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Rext values: "<< Rext << std::endl;
  NumericVector u  = RcppDeepState_NumericVector();
  std::string u_t = "/home/akhila/fuzzer_packages/fuzzedpackages/meteor/inst/testfiles/E_Penman/AFL_E_Penman/afl_inputs/" + std::to_string(t) + "_u.qs";
  qs::c_qsave(u,u_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "u values: "<< u << std::endl;
  NumericVector alpha  = RcppDeepState_NumericVector();
  std::string alpha_t = "/home/akhila/fuzzer_packages/fuzzedpackages/meteor/inst/testfiles/E_Penman/AFL_E_Penman/afl_inputs/" + std::to_string(t) + "_alpha.qs";
  qs::c_qsave(alpha,alpha_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "alpha values: "<< alpha << std::endl;
  NumericVector Z  = RcppDeepState_NumericVector();
  std::string Z_t = "/home/akhila/fuzzer_packages/fuzzedpackages/meteor/inst/testfiles/E_Penman/AFL_E_Penman/afl_inputs/" + std::to_string(t) + "_Z.qs";
  qs::c_qsave(Z,Z_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "Z values: "<< Z << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    E_Penman(temp,relh,atmp,Rs,Rext,u,alpha,Z);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
