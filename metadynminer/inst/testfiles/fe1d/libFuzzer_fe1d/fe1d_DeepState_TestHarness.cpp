// AUTOMATICALLY GENERATED BY RCPPDEEPSTATE PLEASE DO NOT EDIT BY HAND, INSTEAD EDIT
// fe1d_DeepState_TestHarness_generation.cpp and fe1d_DeepState_TestHarness_checks.cpp

#include <fstream>
#include <RInside.h>
#include <iostream>
#include <RcppDeepState.h>
#include <qs.h>
#include <DeepState.hpp>

NumericVector fe1d(NumericVector cv1, NumericVector width1, NumericVector heights, double x, int tmin, int tmax);

TEST(,){
  static int rinside_flag = 0;
  if(rinside_flag == 0)
  {
    rinside_flag = 1;
    RInside R;
  } std::time_t current_timestamp = std::time(0);
  std::cout << "input starts" << std::endl;
  NumericVector cv1  = RcppDeepState_NumericVector();
  std::string cv1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/metadynminer/inst/testfiles/fe1d/libFuzzer_fe1d/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_cv1.qs";
  qs::c_qsave(cv1,cv1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "cv1 values: "<< cv1 << std::endl;
  NumericVector width1  = RcppDeepState_NumericVector();
  std::string width1_t = "/home/akhila/fuzzer_packages/fuzzedpackages/metadynminer/inst/testfiles/fe1d/libFuzzer_fe1d/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_width1.qs";
  qs::c_qsave(width1,width1_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "width1 values: "<< width1 << std::endl;
  NumericVector heights  = RcppDeepState_NumericVector();
  std::string heights_t = "/home/akhila/fuzzer_packages/fuzzedpackages/metadynminer/inst/testfiles/fe1d/libFuzzer_fe1d/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_heights.qs";
  qs::c_qsave(heights,heights_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "heights values: "<< heights << std::endl;
  NumericVector x(1);
  x[0]  = RcppDeepState_double();
  std::string x_t = "/home/akhila/fuzzer_packages/fuzzedpackages/metadynminer/inst/testfiles/fe1d/libFuzzer_fe1d/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_x.qs";
  qs::c_qsave(x,x_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "x values: "<< x << std::endl;
  IntegerVector tmin(1);
  tmin[0]  = RcppDeepState_int();
  std::string tmin_t = "/home/akhila/fuzzer_packages/fuzzedpackages/metadynminer/inst/testfiles/fe1d/libFuzzer_fe1d/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_tmin.qs";
  qs::c_qsave(tmin,tmin_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tmin values: "<< tmin << std::endl;
  IntegerVector tmax(1);
  tmax[0]  = RcppDeepState_int();
  std::string tmax_t = "/home/akhila/fuzzer_packages/fuzzedpackages/metadynminer/inst/testfiles/fe1d/libFuzzer_fe1d/libfuzzer_inputs/" + std::to_string(current_timestamp) +
          "_tmax.qs";
  qs::c_qsave(tmax,tmax_t,
		"high", "zstd", 1, 15, true, 1);
  std::cout << "tmax values: "<< tmax << std::endl;
  std::cout << "input ends" << std::endl;
  try{
    fe1d(cv1,width1,heights,x[0],tmin[0],tmax[0]);
  }
  catch(Rcpp::exception& e){
    std::cout<<"Exception Handled"<<std::endl;
  }
}
