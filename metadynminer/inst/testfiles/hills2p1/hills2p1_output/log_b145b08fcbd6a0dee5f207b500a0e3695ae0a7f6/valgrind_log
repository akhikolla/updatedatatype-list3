<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: ./hills2p1_DeepState_TestHarness --input_test_file /home/akhila/fuzzer_packages/fuzzedpackages/metadynminer/inst/testfiles/hills2p1/hills2p1_output/b145b08fcbd6a0dee5f207b500a0e3695ae0a7f6.fail</line>
</preamble>

<pid>2381234</pid>
<ppid>2381233</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/akhila/fuzzer_packages/fuzzedpackages/metadynminer/inst/testfiles/hills2p1/hills2p1_output/log_b145b08fcbd6a0dee5f207b500a0e3695ae0a7f6/valgrind_log</arg>
    <arg>--tool=memcheck</arg>
    <arg>--leak-check=yes</arg>
  </vargv>
  <argv>
    <exe>./hills2p1_DeepState_TestHarness</exe>
    <arg>--input_test_file</arg>
    <arg>/home/akhila/fuzzer_packages/fuzzedpackages/metadynminer/inst/testfiles/hills2p1/hills2p1_output/b145b08fcbd6a0dee5f207b500a0e3695ae0a7f6.fail</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.045 </time>
</status>

<clientmsg>
  <tid>1</tid>
  <text>new/new[] failed and should throw an exception, but Valgrind
  </text>
</clientmsg>
<clientmsg>
  <tid>1</tid>
  <text>   cannot throw exceptions and so is aborting instead.  Sorry.
  </text>
  <stack>
    <frame>
      <ip>0x483B3CC</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
    </frame>
    <frame>
      <ip>0x483C5F5</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4D2F974</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/metadynminer/src/metadynminer.so</obj>
      <fn>hills2p1(Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, Rcpp::Vector&lt;14, Rcpp::PreserveStorage&gt;, int, int, int)</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/metadynminer/src</dir>
      <file>mm.cpp</file>
      <line>266</line>
    </frame>
    <frame>
      <ip>0x40AAC6</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/metadynminer/inst/testfiles/hills2p1/hills2p1_DeepState_TestHarness</obj>
      <fn>DeepState_Test__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/metadynminer/inst/testfiles/hills2p1</dir>
      <file>hills2p1_DeepState_TestHarness.cpp</file>
      <line>53</line>
    </frame>
    <frame>
      <ip>0x409B58</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/metadynminer/inst/testfiles/hills2p1/hills2p1_DeepState_TestHarness</obj>
      <fn>DeepState_Run__()</fn>
      <dir>/home/akhila/fuzzer_packages/fuzzedpackages/metadynminer/inst/testfiles/hills2p1</dir>
      <file>hills2p1_DeepState_TestHarness.cpp</file>
      <line>13</line>
    </frame>
    <frame>
      <ip>0x41DE08</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/metadynminer/inst/testfiles/hills2p1/hills2p1_DeepState_TestHarness</obj>
      <fn>DeepState_RunTest.isra.0</fn>
    </frame>
    <frame>
      <ip>0x41E0A9</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/metadynminer/inst/testfiles/hills2p1/hills2p1_DeepState_TestHarness</obj>
      <fn>DeepState_ForkAndRunTest</fn>
    </frame>
    <frame>
      <ip>0x41E184</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/metadynminer/inst/testfiles/hills2p1/hills2p1_DeepState_TestHarness</obj>
      <fn>DeepState_RunSavedTestCase</fn>
    </frame>
    <frame>
      <ip>0x407665</ip>
      <obj>/home/akhila/fuzzer_packages/fuzzedpackages/metadynminer/inst/testfiles/hills2p1/hills2p1_DeepState_TestHarness</obj>
      <fn>main</fn>
    </frame>
  </stack>
</clientmsg>

<status>
  <state>FINISHED</state>
  <time>00:00:00:13.073 </time>
</status>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>


<status>
  <state>FINISHED</state>
  <time>00:00:02:57.873 </time>
</status>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

